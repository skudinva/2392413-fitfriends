generator client {
  provider = "prisma-client-js"
  output   = "../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Training {
  id           Int       @id @default(autoincrement())
  title        String
  image        String
  level        String
  type         String
  duration     String
  price        Int
  calories     Int
  description  String
  gender       String
  video        String
  rating       Float     @default(0)
  userId       String    @map("user_id")
  isSpecial    Boolean   @default(false) @map("is_special")
  specialPrice Int       @map("special_price")
  createdAt    DateTime  @default(now()) @map("created_at")
  comments     Comment[]
  orders       Order[]

  @@map("trainings")
}

model Comment {
  id         Int      @id @default(autoincrement())
  userId     String   @map("user_id")
  trainingId Int      @map("training_id")
  rating     Int
  message    String
  createdAt  DateTime @default(now()) @map("created_at")
  training   Training @relation(fields: [trainingId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([trainingId, userId])
  @@map("comments")
}

model Order {
  id          Int      @id @default(autoincrement())
  type        String
  trainingId  Int      @map("training_id")
  userId      String   @map("user_id")
  price       Int
  amount      Int
  totalPrice  Int      @map("total_price")
  paymentType String   @map("payment_type")
  isStarted   Boolean  @map("is_started")
  doneCount   Int      @map("done_count")
  isDone      Boolean  @map("is_done")
  createdAt   DateTime @default(now()) @map("created_at")
  training    Training @relation(fields: [trainingId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("orders")
}
